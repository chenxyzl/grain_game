// Code generated by https://github.com/chenxyzl/gen_tools; DO NOT EDIT.
// gen_tools version: 1.0.3
// generate time: 2024-06-18 17:54:06
// src code version:
// src code commit time :
package model

import (
	"encoding/json"
	"fmt"
	"github.com/chenxyzl/gsgen/gsmodel"
)

func (s *Bag) GetItems() *gsmodel.DMap[uint64, *AItem] {
	return s.items
}
func (s *Bag) SetItems(v *gsmodel.DMap[uint64, *AItem]) {
	if v != nil {
		v.SetParent(0, s.UpdateDirty)
	}
	s.items = v
	s.UpdateDirty(1 << 0)
}
func (s *Bag) String() string {
	doc := struct {
		Items *gsmodel.DMap[uint64, *AItem] `bson:"items"`
	}{s.items}
	return fmt.Sprintf("%v", &doc)
}
func (s *Bag) MarshalJSON() ([]byte, error) {
	doc := struct {
		Items *gsmodel.DMap[uint64, *AItem] `bson:"items"`
	}{s.items}
	return json.Marshal(doc)
}
func (s *Bag) UnmarshalJSON(data []byte) error {
	doc := struct {
		Items *gsmodel.DMap[uint64, *AItem] `bson:"items"`
	}{}
	if err := json.Unmarshal(data, &doc); err != nil {
		return err
	}
	s.SetItems(doc.Items)
	return nil
}
func (s *Bag) Clone() (*Bag, error) {
	data, err := json.Marshal(s)
	if err != nil {
		return nil, err
	}
	ret := Bag{}
	err = json.Unmarshal(data, &ret)
	if err != nil {
		return nil, err
	}
	return &ret, nil
}
