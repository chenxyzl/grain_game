// Code generated by https://github.com/chenxyzl/gsgen; DO NOT EDIT.
// gen_tools version: 1.1.1
// generate time: 2024-06-19 12:13:21
package model

import (
	"encoding/json"
	"fmt"
)

func (s *Game) GetBag() *Bag {
	return s.bag
}
func (s *Game) SetBag(v *Bag) {
	if v != nil {
		v.SetParent(0, s.UpdateDirty)
	}
	s.bag = v
	s.UpdateDirty(1 << 0)
}
func (s *Game) GetMails() *Mails {
	return s.mails
}
func (s *Game) SetMails(v *Mails) {
	if v != nil {
		v.SetParent(1, s.UpdateDirty)
	}
	s.mails = v
	s.UpdateDirty(1 << 1)
}
func (s *Game) String() string {
	doc := struct {
		Bag   *Bag   `bson:"bag"`
		Mails *Mails `bson:"mails"`
	}{s.bag, s.mails}
	return fmt.Sprintf("%v", &doc)
}
func (s *Game) MarshalJSON() ([]byte, error) {
	doc := struct {
		Bag   *Bag   `bson:"bag"`
		Mails *Mails `bson:"mails"`
	}{s.bag, s.mails}
	return json.Marshal(doc)
}
func (s *Game) UnmarshalJSON(data []byte) error {
	doc := struct {
		Bag   *Bag   `bson:"bag"`
		Mails *Mails `bson:"mails"`
	}{}
	if err := json.Unmarshal(data, &doc); err != nil {
		return err
	}
	s.SetBag(doc.Bag)
	s.SetMails(doc.Mails)
	return nil
}
func (s *Game) Clone() (*Game, error) {
	data, err := json.Marshal(s)
	if err != nil {
		return nil, err
	}
	ret := Game{}
	err = json.Unmarshal(data, &ret)
	if err != nil {
		return nil, err
	}
	return &ret, nil
}
