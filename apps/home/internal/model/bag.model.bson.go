// Code generated by https://github.com/chenxyzl/gsgen; DO NOT EDIT.
// gen_tools version: 1.1.1
// generate time: 2024-06-19 12:13:21
package model

import (
	"github.com/chenxyzl/gsgen/gsmodel"
	"go.mongodb.org/mongo-driver/bson"
)

func (s *Bag) MarshalBSON() ([]byte, error) {
	var doc = bson.M{"items": s.items}
	return bson.Marshal(doc)
}
func (s *Bag) UnmarshalBSON(data []byte) error {
	doc := struct {
		Items *gsmodel.DMap[uint64, *AItem] `bson:"items"`
	}{}
	if err := bson.Unmarshal(data, &doc); err != nil {
		return err
	}
	s.SetItems(doc.Items)
	return nil
}
func (s *Bag) BuildBson(m bson.M, preKey string) {
	dirty := s.GetDirty()
	if dirty == 0 {
		return
	}
	if dirty&(1<<0) != 0 {
		if s.items == nil {
			gsmodel.AddUnsetDirtyM(m, gsmodel.MakeBsonKey("items", preKey))
		} else {
			s.items.BuildBson(m, gsmodel.MakeBsonKey("items", preKey))
		}
	}
	return
}
func (s *Bag) CleanDirty() {
	s.DirtyModel.CleanDirty()
	if s.items != nil {
		s.items.CleanDirty()
	}
}
